//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {

    public partial class Entity {

        static readonly UpdatePlayerFovComponent updatePlayerFovComponent = new UpdatePlayerFovComponent();

        public bool isUpdatePlayerFov {
            get { return HasComponent(ComponentIds.UpdatePlayerFov); }
            set {
                if(value != isUpdatePlayerFov) {
                    if(value) {
                        AddComponent(ComponentIds.UpdatePlayerFov, updatePlayerFovComponent);
                    } else {
                        RemoveComponent(ComponentIds.UpdatePlayerFov);
                    }
                }
            }
        }

        public Entity IsUpdatePlayerFov(bool value) {
            isUpdatePlayerFov = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity updatePlayerFovEntity { get { return GetGroup(Matcher.UpdatePlayerFov).GetSingleEntity(); } }

        public bool isUpdatePlayerFov {
            get { return updatePlayerFovEntity != null; }
            set {
                var entity = updatePlayerFovEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isUpdatePlayerFov = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }

    public partial class Matcher {

        static IMatcher _matcherUpdatePlayerFov;

        public static IMatcher UpdatePlayerFov {
            get {
                if(_matcherUpdatePlayerFov == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.UpdatePlayerFov);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherUpdatePlayerFov = matcher;
                }

                return _matcherUpdatePlayerFov;
            }
        }
    }
}
